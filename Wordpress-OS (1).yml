- name: Install and configure WordPress
  hosts: all
  become: true
  vars:
    db_name: wordpress_db
    db_user: wp_user
    db_password: wp_password
    wp_admin_user: admin
    wp_admin_password: admin_password
    wp_site_title: "Example WordPress Site"
    wp_site_url: "example.com"

  tasks:

    - name: Install packages required for WordPress
      dnf:
        name:
        - httpd
        - mod_ssl
        - php
        - php-mysqlnd
        - php-fpm
        - php-gd
        - php-json
        - php-mbstring
        - php-opcache
        - php-pdo
        state: present
      when: ansible_os_family == 'RedHat'


    - name: Install packages required for WordPress
      package:
        name:
        - apache2
        - mysql-server
        - php-mysql
        - php
        - libapache2-mod-php
        - python3-mysqldb
        state: present
      when: ansible_os_family == 'Debian'


    - name: Start and enable Apache service
      service:
        name: apache2
        state: started
        enabled: true
      when: ansible_os_family == 'Debian'

    - name: Start and enable Apache service
      service:
        name: httpd
        state: started
        enabled: true
      when: ansible_os_family == 'RedHat'

    - name: Start and enable MySQL service
      service:
        name: mysql
        state: started
        enabled: true
      when: ansible_os_family == 'Debian'
      

      
    - name: Create WordPress database user
      mysql_user:
        name: "{{ db_user }}"
        password: "{{ db_password }}"
        priv: "{{ db_name }}.*:ALL"
        state: present
      when: ansible_os_family == 'Debian'
      
    - name: Create WordPress database
      mysql_db:
        name: "{{ db_name }}"
        state: present
      when: ansible_os_family == 'Debian'
      
##    - name: Create WordPress database user two
##      mariadb_user:
##        name: "{{ db_user }}"
##        password: "{{ db_password }}"
##        priv: "{{ db_name }}.*:ALL"
##        state: present
##      when: ansible_os_family == 'RedHat'
      
##    - name: Create WordPress database two
##      mariadb_db:
##        name: "{{ db_name }}"
##        state: present
##      when: ansible_os_family == 'RedHat'

    - name: Create WordPress directory
      file:
        path: /var/www/html/wordpress
        state: directory
      
    - name: Download and extract WordPress core files
      get_url:
        url: "https://wordpress.org/latest.tar.gz"
        dest: /tmp/wordpress.tar.gz
      register: download_wordpress

    - name: Extract WordPress core files
      unarchive:
        src: /tmp/wordpress.tar.gz
        dest: /var/www/html/wordpress
        remote_src: yes
        extra_opts: --strip-components=1
      when: download_wordpress is succeeded
      
    - name: Update PHP
      dnf:
        name: php
        state: latest
      become: true
      vars:
        ansible_python_interpreter: /usr/bin/python3.9

  handlers:
    - name: enable apache site
      command: apache2ctl graceful
      notify:
        - reload apache
    - name: Restart Apache service
      service:
        name: apache2
        state: restarted
      when: ansible_os_family == 'Debian'

    - name: Restart Apache service
      service:
        name: httpd
        state: restarted
      when: ansible_os_family == 'RedHat'